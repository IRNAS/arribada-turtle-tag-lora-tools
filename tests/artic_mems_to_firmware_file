#!/usr/bin/python2.7
import argparse
import binascii
import struct


parser = argparse.ArgumentParser()
parser.add_argument('--path', type=str, required=True)
parser.add_argument('--output', type=argparse.FileType('wb'), required=True)


args = parser.parse_args()


def process_mem_file(path):
	byte_array = b''
	with open(path, 'r') as f:
		for i in f:
			try:
				(addr, data) = i.split()
				addr = binascii.unhexlify(addr[1:])[::-1]
				data = binascii.unhexlify(data)[::-1]
				byte_array += addr
				byte_array += data
			except:
				continue
	return byte_array



(xmem, ymem, pmem) = (
	process_mem_file(args.path + '/ARTIC.XMEM'),
	process_mem_file(args.path + '/ARTIC.YMEM'),
	process_mem_file(args.path + '/ARTIC.PMEM')
					)


fw_file_data = b''
fw_file_data += struct.pack('<I', len(xmem))
fw_file_data += struct.pack('<I', len(ymem))
fw_file_data += struct.pack('<I', len(pmem))
fw_file_data += xmem + ymem + pmem

args.output.write(fw_file_data)
args.output.close()
